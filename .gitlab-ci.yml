stages:
  - style
  - build
  - test
  - deploy

.notify: &notify
  - |
    source /home/kossadda/config.conf
    MESSAGE=$(if [[ "$CI_JOB_STATUS" =~ "failed" ]]; then echo "$CI_JOB_STAGE stage: FAIL"; else echo "$CI_JOB_STAGE stage: SUCCESS"; fi)
    ssh "$REMOTE_USER"@"$REMOTE_SERVER" "curl -s -X POST $API_URL -d chat_id=$CHAT_ID -d text=\"$MESSAGE\"" > "/dev/null"

style-job:
  stage: style
  tags:
    - style
  script:
    - clang-format -style=Google -Werror -n src/cat/s21_cat.* src/grep/s21_grep.*
  after_script:
    - *notify
  only:
    - develop

build-job:
  stage: build
  tags:
    - build
  script:
    - cd src/cat && make s21_cat && cd ./../grep && make s21_grep
  after_script:
    - *notify
  artifacts:
    paths:
      - src/cat/s21_cat
      - src/grep/s21_grep
    expire_in: 30 days
  only:
    - develop

test-job:
  stage: test
  tags:
    - test
  script:
    - (cd src/cat && make test) 2>/dev/null 1>cat_test.txt
    - (cd src/grep && make test) 2>/dev/null 1>grep_test.txt
    - |
      if ! grep -q "FAIL: 0" cat_test.txt || ! grep -q "FAIL: 0" grep_test.txt; then
        exit 1
      fi
  after_script:
    - *notify
  only:
    - develop

deploy-job:
  stage: deploy
  tags:
    - deploy
  when: manual
  script:
    - |
      if scp ./src/cat/s21_cat ./src/grep/s21_grep kossadda@192.10.10.2:~/ ; then
        ssh kossadda@192.10.10.2 "sudo mv s21_cat s21_grep /usr/local/bin"
        echo -e "\e[32mSuccesfully copy artifacts to /usr/local/bin\e[0m"
      else
        echo -e "\e[31mCAN'T COPY ARTIFACTS\e[0m"
        exit 1
      fi
  after_script:
    - *notify
  only:
    - develop
